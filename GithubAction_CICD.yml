name: CI-Pipeline

on:
  push:
    branches: [master]

jobs:
  Setup:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Maven clean job
      run: mvn -B clean --file pom.xml

  Compile:
    runs-on: ubuntu-latest
    needs: Setup
    steps:
    - uses: actions/checkout@v2
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Maven compile job
      run: mvn -B compile --file pom.xml

  StaticAnalysis:
    runs-on: ubuntu-latest
    needs: Compile
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Cache Sonarcloud packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache Maven Packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashfiles{'**/pom.xml'} }}
        restore-keys: ${{ runner.os }}-sonar
    - name: Build and Analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
  
  UnitTesting:
    runs-on: ubuntu-latest
    needs: StaticAnalysis
    name: Unit Testing
    steps:
    - run: echo Should run unit tests.
    - name: checkout code
      uses: actions/checkout@v1
    - name: vuild and run tests
      run: mvn -B test --file pom.xml
    - name: publish unit test results
      uses: EnricoMi/publish-unit-test-result-action@v1.9
      with:
        files: "target/surefire-reports/*.xml"
  
  CodeCoverage:
    runs-on: ubuntu-latest
    needs: UnitTesting
    name: Code Coverage
    steps:
    - run: echo should run code coverage
    - name: checkout code
      uses: actions/checkout@v1
    - name: build and run tests
      run: mvn -X org.jacoco:jacoco-maven-plugin:report
  
  War:
    runs-on: ubuntu:latest
    needs: CodeCoverage
    name: War
    steps:
    - run: echo should packaging war
    - name: Checkout Code
      uses: actions/checkout@v1
    - name: War packaging
      run: mvn -X war:war

  PublishPackage:
    runs-on: ubuntu:latest
    needs: War
    name: Publish Package to GitHub

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github
        settings-path: ${{ github.workspace }}
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Publish to GitHub package Apache Maven
      run: mv deploy -s $GITUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}

  
  docker:
    name: Publish - Docker Hub
    needs: War
    runs-on: ubuntu-latest
    steps:
    - name: check out the repo
      uses: actions/checkout@v2
    - name: push to docker hub
      uses: docker/build-push-action@v2
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASS }}
        repository: ${{ secrets.DOCKER_REPO }}
        tag_with_ref: true


  PushDockerImahe_GitHubPackages:
    name: push docker image to github packages
    needs: docker
    runs-on: ubuntu-latest
    steps:
    - name: checkout the repo
      uses: actions/checkout@v2
    - name: push to github packages
      uses: docker/build-push-action@v2
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: docker.pkg.github.com
        repository: my-org/my-repo/my-image
        tag_with_ref: true
